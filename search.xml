<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>blog01</title>
      <link href="/2023/08/29/blog01/"/>
      <url>/2023/08/29/blog01/</url>
      
        <content type="html"><![CDATA[<h4 id="blog-："><a href="#blog-：" class="headerlink" title="blog ："></a>blog ：</h4><blockquote><p>1.第一篇</p></blockquote><ul><li>依托hexo框架</li><li>搭建静态网站</li></ul><hr><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>了解bs基本框架</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在了解架构的定义之前，我们可以先知道为什么有架构？<br>这是为了“低耦合，高内聚”，实现代码的健壮性和可扩展性。比如为了更好地降低架构中各层的耦合度，在设计中，采用面向抽象编程。就是说，在上层对下层的调用中，是通过接口实现的。而下层对上层的实现，实际上是下层接口它的实现类。这就是利用了多态，服务标准（接口）是相同的，服务提供者（实现类）是可以更换的。<br>【三层架构是一个宏观的概念。后面的MVC架构和SSM架构，你可以认为是比较具体的三层架构的框架实现。】</p><hr><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><p>三层架构是指：视图层 view、服务层 service、持久层 Dao，通常也叫（表示层UI、业务逻辑层BLL、数据访问层DAL），如何理解这三层呢？</p><p>view层：用于接收用户输入的数据和显示数据给用户看，是用户和服务端进行交互的界面。<br>【说白了就是一个网页！我们打开百度主页，我们要上网查资料，输入的是数据吧，需要服务端进行接收吧？它接收之后，根据我们要找的内容，显示出查询结果，是显示数据吧？这就是view层，就是这么好理解】</p><p>service层：实现业务的主要逻辑，是针对具体问题有具体的解决方案的一个层。<br>【举个例子，我们登陆账号的时候，要输入账号和密码，那百度那边的服务器需要知道我们输入的是否正确吧，它需要去数据库中找，如果账号和密码搭配得上的话，我们才能成功地登陆。这算是一个登陆业务。】</p><p>dao层：负责数据库的访问，就是实现对表的增删改查。<br>【记住这话：上层调用下层。我们的service层要想获得数据库中的数据，其实就是借dao层的实现类来获得。】</p><hr><h2 id="MVC架构"><a href="#MVC架构" class="headerlink" title="MVC架构"></a>MVC架构</h2><p>MVC架构，就是由Model模型（JavaBean）、View视图（Jsp）、Controller控制器（Servlet）构成。</p><p>Model：承载数据，对用户提出请求进行计算的模块。有两种类，一种是数据承载类Bean，一种是业务处理类Bean。数据承载Bean就是实体类<br>【说白点，就是我们在数据库中有表，表中有字段；对应到我们的java中，表对应类，字段对应类的属性，这种类称为实体类，也是数据承载Bean，实体类的实例化对象就是对应表的记录。】<br>【那什么是业务处理Bean呢，就是用于处理用户的请求的，对用户的请求进行一些逻辑计算，也可以从数据库中获取数据，最后将最终结果，交给Controller】</p><p>View：为用户提供界面，和三层架构中的view基本相同。</p><p>Controller：用于将用户的请求交给Model进行处理，也可以将Model的处理结果向用户提供响应</p><hr><h2 id="ssm架构"><a href="#ssm架构" class="headerlink" title="ssm架构"></a>ssm架构</h2><p>SSM架构其实也是对三层架构的一种实现。上文中也有提到，SSM是三个框架的简写，即Spring、SpringMVC、MyBatis，这三个框架功能不同，各司其职，最终实现了三层架构。</p><p>1）SpringMVC是对view层的实现者，SpringMVC中的Controller类是负责接收用户的请求，和完成请求转发及用户响应的操作。<br>2）MyBatis是Dao层的实现者，负责数据库中数据的增删改查。<br>那么，剩下的Spring是service层的实现者吗？不算是。<br>3）Spring是一个大杂烩，是一个大管家。我们开发一个应用，所有的Bean（你可以理解成为类）的生命周期以及行为，都是由Spring管理。比如对象创建，对象初始化，对象销毁，对象的关系等等，都由Spring管理。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/28/hello-world/"/>
      <url>/2023/08/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to  my blog ! This is my  first post. </p><h2 id="Let’s-go"><a href="#Let’s-go" class="headerlink" title="Let’s go!"></a>Let’s go!</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
